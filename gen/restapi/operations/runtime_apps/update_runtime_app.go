// Code generated by go-swagger; DO NOT EDIT.

package runtime_apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateRuntimeAppHandlerFunc turns a function with the right signature into a update runtime app handler
type UpdateRuntimeAppHandlerFunc func(UpdateRuntimeAppParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateRuntimeAppHandlerFunc) Handle(params UpdateRuntimeAppParams) middleware.Responder {
	return fn(params)
}

// UpdateRuntimeAppHandler interface for that can handle valid update runtime app params
type UpdateRuntimeAppHandler interface {
	Handle(UpdateRuntimeAppParams) middleware.Responder
}

// NewUpdateRuntimeApp creates a new http.Handler for the update runtime app operation
func NewUpdateRuntimeApp(ctx *middleware.Context, handler UpdateRuntimeAppHandler) *UpdateRuntimeApp {
	return &UpdateRuntimeApp{Context: ctx, Handler: handler}
}

/*UpdateRuntimeApp swagger:route PUT /api/v1/groups/{groupname}/runtime/apps/{appname} runtimeApps updateRuntimeApp

UpdateRuntimeApp update runtime app API

*/
type UpdateRuntimeApp struct {
	Context *middleware.Context
	Handler UpdateRuntimeAppHandler
}

func (o *UpdateRuntimeApp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateRuntimeAppParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
