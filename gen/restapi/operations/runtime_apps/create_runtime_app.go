// Code generated by go-swagger; DO NOT EDIT.

package runtime_apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateRuntimeAppHandlerFunc turns a function with the right signature into a create runtime app handler
type CreateRuntimeAppHandlerFunc func(CreateRuntimeAppParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateRuntimeAppHandlerFunc) Handle(params CreateRuntimeAppParams) middleware.Responder {
	return fn(params)
}

// CreateRuntimeAppHandler interface for that can handle valid create runtime app params
type CreateRuntimeAppHandler interface {
	Handle(CreateRuntimeAppParams) middleware.Responder
}

// NewCreateRuntimeApp creates a new http.Handler for the create runtime app operation
func NewCreateRuntimeApp(ctx *middleware.Context, handler CreateRuntimeAppHandler) *CreateRuntimeApp {
	return &CreateRuntimeApp{Context: ctx, Handler: handler}
}

/*CreateRuntimeApp swagger:route POST /api/v1/groups/{groupname}/runtime/apps runtimeApps createRuntimeApp

CreateRuntimeApp create runtime app API

*/
type CreateRuntimeApp struct {
	Context *middleware.Context
	Handler CreateRuntimeAppHandler
}

func (o *CreateRuntimeApp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateRuntimeAppParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
