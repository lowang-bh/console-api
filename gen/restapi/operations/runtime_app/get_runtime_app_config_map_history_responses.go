// Code generated by go-swagger; DO NOT EDIT.

package runtime_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/gen/models"
)

// GetRuntimeAppConfigMapHistoryOKCode is the HTTP code returned for type GetRuntimeAppConfigMapHistoryOK
const GetRuntimeAppConfigMapHistoryOKCode int = 200

/*GetRuntimeAppConfigMapHistoryOK Get the config map history of the runtime app

swagger:response getRuntimeAppConfigMapHistoryOK
*/
type GetRuntimeAppConfigMapHistoryOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ConfigMap `json:"body,omitempty"`
}

// NewGetRuntimeAppConfigMapHistoryOK creates GetRuntimeAppConfigMapHistoryOK with default headers values
func NewGetRuntimeAppConfigMapHistoryOK() *GetRuntimeAppConfigMapHistoryOK {

	return &GetRuntimeAppConfigMapHistoryOK{}
}

// WithPayload adds the payload to the get runtime app config map history o k response
func (o *GetRuntimeAppConfigMapHistoryOK) WithPayload(payload []*models.ConfigMap) *GetRuntimeAppConfigMapHistoryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runtime app config map history o k response
func (o *GetRuntimeAppConfigMapHistoryOK) SetPayload(payload []*models.ConfigMap) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuntimeAppConfigMapHistoryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.ConfigMap, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetRuntimeAppConfigMapHistoryDefault Failed

swagger:response getRuntimeAppConfigMapHistoryDefault
*/
type GetRuntimeAppConfigMapHistoryDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRuntimeAppConfigMapHistoryDefault creates GetRuntimeAppConfigMapHistoryDefault with default headers values
func NewGetRuntimeAppConfigMapHistoryDefault(code int) *GetRuntimeAppConfigMapHistoryDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRuntimeAppConfigMapHistoryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get runtime app config map history default response
func (o *GetRuntimeAppConfigMapHistoryDefault) WithStatusCode(code int) *GetRuntimeAppConfigMapHistoryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get runtime app config map history default response
func (o *GetRuntimeAppConfigMapHistoryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get runtime app config map history default response
func (o *GetRuntimeAppConfigMapHistoryDefault) WithPayload(payload *models.Error) *GetRuntimeAppConfigMapHistoryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runtime app config map history default response
func (o *GetRuntimeAppConfigMapHistoryDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuntimeAppConfigMapHistoryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
