// Code generated by go-swagger; DO NOT EDIT.

package runtime_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/gen/models"
)

// CreateOrUpdateRuntimeAppWorkloadOKCode is the HTTP code returned for type CreateOrUpdateRuntimeAppWorkloadOK
const CreateOrUpdateRuntimeAppWorkloadOKCode int = 200

/*CreateOrUpdateRuntimeAppWorkloadOK OK

swagger:response createOrUpdateRuntimeAppWorkloadOK
*/
type CreateOrUpdateRuntimeAppWorkloadOK struct {

	/*
	  In: Body
	*/
	Payload *models.Workload `json:"body,omitempty"`
}

// NewCreateOrUpdateRuntimeAppWorkloadOK creates CreateOrUpdateRuntimeAppWorkloadOK with default headers values
func NewCreateOrUpdateRuntimeAppWorkloadOK() *CreateOrUpdateRuntimeAppWorkloadOK {

	return &CreateOrUpdateRuntimeAppWorkloadOK{}
}

// WithPayload adds the payload to the create or update runtime app workload o k response
func (o *CreateOrUpdateRuntimeAppWorkloadOK) WithPayload(payload *models.Workload) *CreateOrUpdateRuntimeAppWorkloadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update runtime app workload o k response
func (o *CreateOrUpdateRuntimeAppWorkloadOK) SetPayload(payload *models.Workload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateRuntimeAppWorkloadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateOrUpdateRuntimeAppWorkloadDefault Failed

swagger:response createOrUpdateRuntimeAppWorkloadDefault
*/
type CreateOrUpdateRuntimeAppWorkloadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateOrUpdateRuntimeAppWorkloadDefault creates CreateOrUpdateRuntimeAppWorkloadDefault with default headers values
func NewCreateOrUpdateRuntimeAppWorkloadDefault(code int) *CreateOrUpdateRuntimeAppWorkloadDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateOrUpdateRuntimeAppWorkloadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create or update runtime app workload default response
func (o *CreateOrUpdateRuntimeAppWorkloadDefault) WithStatusCode(code int) *CreateOrUpdateRuntimeAppWorkloadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create or update runtime app workload default response
func (o *CreateOrUpdateRuntimeAppWorkloadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create or update runtime app workload default response
func (o *CreateOrUpdateRuntimeAppWorkloadDefault) WithPayload(payload *models.Error) *CreateOrUpdateRuntimeAppWorkloadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update runtime app workload default response
func (o *CreateOrUpdateRuntimeAppWorkloadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateRuntimeAppWorkloadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
