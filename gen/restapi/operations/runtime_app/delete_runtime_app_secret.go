// Code generated by go-swagger; DO NOT EDIT.

package runtime_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteRuntimeAppSecretHandlerFunc turns a function with the right signature into a delete runtime app secret handler
type DeleteRuntimeAppSecretHandlerFunc func(DeleteRuntimeAppSecretParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteRuntimeAppSecretHandlerFunc) Handle(params DeleteRuntimeAppSecretParams) middleware.Responder {
	return fn(params)
}

// DeleteRuntimeAppSecretHandler interface for that can handle valid delete runtime app secret params
type DeleteRuntimeAppSecretHandler interface {
	Handle(DeleteRuntimeAppSecretParams) middleware.Responder
}

// NewDeleteRuntimeAppSecret creates a new http.Handler for the delete runtime app secret operation
func NewDeleteRuntimeAppSecret(ctx *middleware.Context, handler DeleteRuntimeAppSecretHandler) *DeleteRuntimeAppSecret {
	return &DeleteRuntimeAppSecret{Context: ctx, Handler: handler}
}

/*DeleteRuntimeAppSecret swagger:route DELETE /api/v1/groups/{groupname}/runtime/apps/{appname}/secrets/{secretname} runtimeApp deleteRuntimeAppSecret

DeleteRuntimeAppSecret delete runtime app secret API

*/
type DeleteRuntimeAppSecret struct {
	Context *middleware.Context
	Handler DeleteRuntimeAppSecretHandler
}

func (o *DeleteRuntimeAppSecret) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteRuntimeAppSecretParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
