// Code generated by go-swagger; DO NOT EDIT.

package runtime_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LogsRuntimeAppPodHandlerFunc turns a function with the right signature into a logs runtime app pod handler
type LogsRuntimeAppPodHandlerFunc func(LogsRuntimeAppPodParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LogsRuntimeAppPodHandlerFunc) Handle(params LogsRuntimeAppPodParams) middleware.Responder {
	return fn(params)
}

// LogsRuntimeAppPodHandler interface for that can handle valid logs runtime app pod params
type LogsRuntimeAppPodHandler interface {
	Handle(LogsRuntimeAppPodParams) middleware.Responder
}

// NewLogsRuntimeAppPod creates a new http.Handler for the logs runtime app pod operation
func NewLogsRuntimeAppPod(ctx *middleware.Context, handler LogsRuntimeAppPodHandler) *LogsRuntimeAppPod {
	return &LogsRuntimeAppPod{Context: ctx, Handler: handler}
}

/*LogsRuntimeAppPod swagger:route GET /api/v1/groups/{groupname}/runtime/apps/{appname}/pods/{podname}/logs runtimeApp logsRuntimeAppPod

长连接

*/
type LogsRuntimeAppPod struct {
	Context *middleware.Context
	Handler LogsRuntimeAppPodHandler
}

func (o *LogsRuntimeAppPod) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewLogsRuntimeAppPodParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
