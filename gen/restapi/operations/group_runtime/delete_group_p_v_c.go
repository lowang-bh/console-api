// Code generated by go-swagger; DO NOT EDIT.

package group_runtime

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteGroupPVCHandlerFunc turns a function with the right signature into a delete group p v c handler
type DeleteGroupPVCHandlerFunc func(DeleteGroupPVCParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteGroupPVCHandlerFunc) Handle(params DeleteGroupPVCParams) middleware.Responder {
	return fn(params)
}

// DeleteGroupPVCHandler interface for that can handle valid delete group p v c params
type DeleteGroupPVCHandler interface {
	Handle(DeleteGroupPVCParams) middleware.Responder
}

// NewDeleteGroupPVC creates a new http.Handler for the delete group p v c operation
func NewDeleteGroupPVC(ctx *middleware.Context, handler DeleteGroupPVCHandler) *DeleteGroupPVC {
	return &DeleteGroupPVC{Context: ctx, Handler: handler}
}

/*DeleteGroupPVC swagger:route DELETE /api/v1/groups/{groupname}/runtime/pvcs/{pvcname} groupRuntime deleteGroupPVC

DeleteGroupPVC delete group p v c API

*/
type DeleteGroupPVC struct {
	Context *middleware.Context
	Handler DeleteGroupPVCHandler
}

func (o *DeleteGroupPVC) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteGroupPVCParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
