// Code generated by go-swagger; DO NOT EDIT.

package group_runtime

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/gen/models"
)

// UpdateGroupSecretOKCode is the HTTP code returned for type UpdateGroupSecretOK
const UpdateGroupSecretOKCode int = 200

/*UpdateGroupSecretOK OK

swagger:response updateGroupSecretOK
*/
type UpdateGroupSecretOK struct {

	/*
	  In: Body
	*/
	Payload *models.Secret `json:"body,omitempty"`
}

// NewUpdateGroupSecretOK creates UpdateGroupSecretOK with default headers values
func NewUpdateGroupSecretOK() *UpdateGroupSecretOK {

	return &UpdateGroupSecretOK{}
}

// WithPayload adds the payload to the update group secret o k response
func (o *UpdateGroupSecretOK) WithPayload(payload *models.Secret) *UpdateGroupSecretOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group secret o k response
func (o *UpdateGroupSecretOK) SetPayload(payload *models.Secret) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupSecretOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateGroupSecretDefault Failed

swagger:response updateGroupSecretDefault
*/
type UpdateGroupSecretDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateGroupSecretDefault creates UpdateGroupSecretDefault with default headers values
func NewUpdateGroupSecretDefault(code int) *UpdateGroupSecretDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateGroupSecretDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update group secret default response
func (o *UpdateGroupSecretDefault) WithStatusCode(code int) *UpdateGroupSecretDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update group secret default response
func (o *UpdateGroupSecretDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update group secret default response
func (o *UpdateGroupSecretDefault) WithPayload(payload *models.Error) *UpdateGroupSecretDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update group secret default response
func (o *UpdateGroupSecretDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateGroupSecretDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
