// Code generated by go-swagger; DO NOT EDIT.

package group_runtime

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/gen/models"
)

// GetGroupPVCOKCode is the HTTP code returned for type GetGroupPVCOK
const GetGroupPVCOKCode int = 200

/*GetGroupPVCOK Get the PVC of the group

swagger:response getGroupPVCOK
*/
type GetGroupPVCOK struct {

	/*
	  In: Body
	*/
	Payload models.Pvc `json:"body,omitempty"`
}

// NewGetGroupPVCOK creates GetGroupPVCOK with default headers values
func NewGetGroupPVCOK() *GetGroupPVCOK {

	return &GetGroupPVCOK{}
}

// WithPayload adds the payload to the get group p v c o k response
func (o *GetGroupPVCOK) WithPayload(payload models.Pvc) *GetGroupPVCOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group p v c o k response
func (o *GetGroupPVCOK) SetPayload(payload models.Pvc) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupPVCOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetGroupPVCDefault Failed

swagger:response getGroupPVCDefault
*/
type GetGroupPVCDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupPVCDefault creates GetGroupPVCDefault with default headers values
func NewGetGroupPVCDefault(code int) *GetGroupPVCDefault {
	if code <= 0 {
		code = 500
	}

	return &GetGroupPVCDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get group p v c default response
func (o *GetGroupPVCDefault) WithStatusCode(code int) *GetGroupPVCDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get group p v c default response
func (o *GetGroupPVCDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get group p v c default response
func (o *GetGroupPVCDefault) WithPayload(payload *models.Error) *GetGroupPVCDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group p v c default response
func (o *GetGroupPVCDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupPVCDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
