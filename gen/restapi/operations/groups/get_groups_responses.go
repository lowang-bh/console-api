// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/gen/models"
)

// GetGroupsOKCode is the HTTP code returned for type GetGroupsOK
const GetGroupsOKCode int = 200

/*GetGroupsOK List the groups

swagger:response getGroupsOK
*/
type GetGroupsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Group `json:"body,omitempty"`
}

// NewGetGroupsOK creates GetGroupsOK with default headers values
func NewGetGroupsOK() *GetGroupsOK {

	return &GetGroupsOK{}
}

// WithPayload adds the payload to the get groups o k response
func (o *GetGroupsOK) WithPayload(payload []*models.Group) *GetGroupsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get groups o k response
func (o *GetGroupsOK) SetPayload(payload []*models.Group) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Group, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetGroupsDefault Failed

swagger:response getGroupsDefault
*/
type GetGroupsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupsDefault creates GetGroupsDefault with default headers values
func NewGetGroupsDefault(code int) *GetGroupsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetGroupsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get groups default response
func (o *GetGroupsDefault) WithStatusCode(code int) *GetGroupsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get groups default response
func (o *GetGroupsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get groups default response
func (o *GetGroupsDefault) WithPayload(payload *models.Error) *GetGroupsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get groups default response
func (o *GetGroupsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
