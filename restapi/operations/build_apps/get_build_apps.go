// Code generated by go-swagger; DO NOT EDIT.

package build_apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBuildAppsHandlerFunc turns a function with the right signature into a get build apps handler
type GetBuildAppsHandlerFunc func(GetBuildAppsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBuildAppsHandlerFunc) Handle(params GetBuildAppsParams) middleware.Responder {
	return fn(params)
}

// GetBuildAppsHandler interface for that can handle valid get build apps params
type GetBuildAppsHandler interface {
	Handle(GetBuildAppsParams) middleware.Responder
}

// NewGetBuildApps creates a new http.Handler for the get build apps operation
func NewGetBuildApps(ctx *middleware.Context, handler GetBuildAppsHandler) *GetBuildApps {
	return &GetBuildApps{Context: ctx, Handler: handler}
}

/*GetBuildApps swagger:route GET /api/v1/groups/{groupname}/build/apps buildApps getBuildApps

GetBuildApps get build apps API

*/
type GetBuildApps struct {
	Context *middleware.Context
	Handler GetBuildAppsHandler
}

func (o *GetBuildApps) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetBuildAppsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
