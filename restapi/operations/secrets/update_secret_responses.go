// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/models"
)

// UpdateSecretOKCode is the HTTP code returned for type UpdateSecretOK
const UpdateSecretOKCode int = 200

/*UpdateSecretOK OK

swagger:response updateSecretOK
*/
type UpdateSecretOK struct {

	/*
	  In: Body
	*/
	Payload *models.Secret `json:"body,omitempty"`
}

// NewUpdateSecretOK creates UpdateSecretOK with default headers values
func NewUpdateSecretOK() *UpdateSecretOK {

	return &UpdateSecretOK{}
}

// WithPayload adds the payload to the update secret o k response
func (o *UpdateSecretOK) WithPayload(payload *models.Secret) *UpdateSecretOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update secret o k response
func (o *UpdateSecretOK) SetPayload(payload *models.Secret) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSecretOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateSecretDefault Failed

swagger:response updateSecretDefault
*/
type UpdateSecretDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateSecretDefault creates UpdateSecretDefault with default headers values
func NewUpdateSecretDefault(code int) *UpdateSecretDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateSecretDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update secret default response
func (o *UpdateSecretDefault) WithStatusCode(code int) *UpdateSecretDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update secret default response
func (o *UpdateSecretDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update secret default response
func (o *UpdateSecretDefault) WithPayload(payload *models.Error) *UpdateSecretDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update secret default response
func (o *UpdateSecretDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateSecretDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
