// Code generated by go-swagger; DO NOT EDIT.

package workload

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/models"
)

// CreateOrUpdateWorkloadOKCode is the HTTP code returned for type CreateOrUpdateWorkloadOK
const CreateOrUpdateWorkloadOKCode int = 200

/*CreateOrUpdateWorkloadOK OK

swagger:response createOrUpdateWorkloadOK
*/
type CreateOrUpdateWorkloadOK struct {

	/*
	  In: Body
	*/
	Payload *models.Workload `json:"body,omitempty"`
}

// NewCreateOrUpdateWorkloadOK creates CreateOrUpdateWorkloadOK with default headers values
func NewCreateOrUpdateWorkloadOK() *CreateOrUpdateWorkloadOK {

	return &CreateOrUpdateWorkloadOK{}
}

// WithPayload adds the payload to the create or update workload o k response
func (o *CreateOrUpdateWorkloadOK) WithPayload(payload *models.Workload) *CreateOrUpdateWorkloadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update workload o k response
func (o *CreateOrUpdateWorkloadOK) SetPayload(payload *models.Workload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateWorkloadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateOrUpdateWorkloadDefault Failed

swagger:response createOrUpdateWorkloadDefault
*/
type CreateOrUpdateWorkloadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateOrUpdateWorkloadDefault creates CreateOrUpdateWorkloadDefault with default headers values
func NewCreateOrUpdateWorkloadDefault(code int) *CreateOrUpdateWorkloadDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateOrUpdateWorkloadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create or update workload default response
func (o *CreateOrUpdateWorkloadDefault) WithStatusCode(code int) *CreateOrUpdateWorkloadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create or update workload default response
func (o *CreateOrUpdateWorkloadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create or update workload default response
func (o *CreateOrUpdateWorkloadDefault) WithPayload(payload *models.Error) *CreateOrUpdateWorkloadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update workload default response
func (o *CreateOrUpdateWorkloadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateWorkloadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
