// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteAppParams creates a new DeleteAppParams object
// no default values defined in spec.
func NewDeleteAppParams() DeleteAppParams {

	return DeleteAppParams{}
}

// DeleteAppParams contains all the bound params for the delete app operation
// typically these are obtained from a http.Request
//
// swagger:parameters deleteApp
type DeleteAppParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	App int64
	/*
	  Required: true
	  In: path
	*/
	Group int64
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewDeleteAppParams() beforehand.
func (o *DeleteAppParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rApp, rhkApp, _ := route.Params.GetOK("app")
	if err := o.bindApp(rApp, rhkApp, route.Formats); err != nil {
		res = append(res, err)
	}

	rGroup, rhkGroup, _ := route.Params.GetOK("group")
	if err := o.bindGroup(rGroup, rhkGroup, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteAppParams) bindApp(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("app", "path", "int64", raw)
	}
	o.App = value

	return nil
}

func (o *DeleteAppParams) bindGroup(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("group", "path", "int64", raw)
	}
	o.Group = value

	return nil
}
