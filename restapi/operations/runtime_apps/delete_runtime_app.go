// Code generated by go-swagger; DO NOT EDIT.

package runtime_apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteRuntimeAppHandlerFunc turns a function with the right signature into a delete runtime app handler
type DeleteRuntimeAppHandlerFunc func(DeleteRuntimeAppParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteRuntimeAppHandlerFunc) Handle(params DeleteRuntimeAppParams) middleware.Responder {
	return fn(params)
}

// DeleteRuntimeAppHandler interface for that can handle valid delete runtime app params
type DeleteRuntimeAppHandler interface {
	Handle(DeleteRuntimeAppParams) middleware.Responder
}

// NewDeleteRuntimeApp creates a new http.Handler for the delete runtime app operation
func NewDeleteRuntimeApp(ctx *middleware.Context, handler DeleteRuntimeAppHandler) *DeleteRuntimeApp {
	return &DeleteRuntimeApp{Context: ctx, Handler: handler}
}

/*DeleteRuntimeApp swagger:route DELETE /api/v1/groups/{groupname}/runtime/apps/{appname} runtimeApps deleteRuntimeApp

DeleteRuntimeApp delete runtime app API

*/
type DeleteRuntimeApp struct {
	Context *middleware.Context
	Handler DeleteRuntimeAppHandler
}

func (o *DeleteRuntimeApp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteRuntimeAppParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
