// Code generated by go-swagger; DO NOT EDIT.

package pvcs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPVCHandlerFunc turns a function with the right signature into a get p v c handler
type GetPVCHandlerFunc func(GetPVCParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPVCHandlerFunc) Handle(params GetPVCParams) middleware.Responder {
	return fn(params)
}

// GetPVCHandler interface for that can handle valid get p v c params
type GetPVCHandler interface {
	Handle(GetPVCParams) middleware.Responder
}

// NewGetPVC creates a new http.Handler for the get p v c operation
func NewGetPVC(ctx *middleware.Context, handler GetPVCHandler) *GetPVC {
	return &GetPVC{Context: ctx, Handler: handler}
}

/*GetPVC swagger:route GET /api/v1/groups/{groupname}/runtime/pvcs/{pvcname} pvcs getPVC

GetPVC get p v c API

*/
type GetPVC struct {
	Context *middleware.Context
	Handler GetPVCHandler
}

func (o *GetPVC) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPVCParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
