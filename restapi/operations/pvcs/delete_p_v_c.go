// Code generated by go-swagger; DO NOT EDIT.

package pvcs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeletePVCHandlerFunc turns a function with the right signature into a delete p v c handler
type DeletePVCHandlerFunc func(DeletePVCParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeletePVCHandlerFunc) Handle(params DeletePVCParams) middleware.Responder {
	return fn(params)
}

// DeletePVCHandler interface for that can handle valid delete p v c params
type DeletePVCHandler interface {
	Handle(DeletePVCParams) middleware.Responder
}

// NewDeletePVC creates a new http.Handler for the delete p v c operation
func NewDeletePVC(ctx *middleware.Context, handler DeletePVCHandler) *DeletePVC {
	return &DeletePVC{Context: ctx, Handler: handler}
}

/*DeletePVC swagger:route DELETE /api/v1/groups/{groupname}/runtime/pvcs/{pvcname} pvcs deletePVC

DeletePVC delete p v c API

*/
type DeletePVC struct {
	Context *middleware.Context
	Handler DeletePVCHandler
}

func (o *DeletePVC) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeletePVCParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
