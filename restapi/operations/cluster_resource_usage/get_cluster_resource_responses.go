// Code generated by go-swagger; DO NOT EDIT.

package cluster_resource_usage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/models"
)

// GetClusterResourceOKCode is the HTTP code returned for type GetClusterResourceOK
const GetClusterResourceOKCode int = 200

/*GetClusterResourceOK Get the cluster resouce usage

swagger:response getClusterResourceOK
*/
type GetClusterResourceOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResourceUsage `json:"body,omitempty"`
}

// NewGetClusterResourceOK creates GetClusterResourceOK with default headers values
func NewGetClusterResourceOK() *GetClusterResourceOK {

	return &GetClusterResourceOK{}
}

// WithPayload adds the payload to the get cluster resource o k response
func (o *GetClusterResourceOK) WithPayload(payload *models.ResourceUsage) *GetClusterResourceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster resource o k response
func (o *GetClusterResourceOK) SetPayload(payload *models.ResourceUsage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterResourceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetClusterResourceDefault Failed

swagger:response getClusterResourceDefault
*/
type GetClusterResourceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClusterResourceDefault creates GetClusterResourceDefault with default headers values
func NewGetClusterResourceDefault(code int) *GetClusterResourceDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClusterResourceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cluster resource default response
func (o *GetClusterResourceDefault) WithStatusCode(code int) *GetClusterResourceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cluster resource default response
func (o *GetClusterResourceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cluster resource default response
func (o *GetClusterResourceDefault) WithPayload(payload *models.Error) *GetClusterResourceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cluster resource default response
func (o *GetClusterResourceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClusterResourceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
