// Code generated by go-swagger; DO NOT EDIT.

package config_map

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/models"
)

// CreateOrUpdateConfigMapOKCode is the HTTP code returned for type CreateOrUpdateConfigMapOK
const CreateOrUpdateConfigMapOKCode int = 200

/*CreateOrUpdateConfigMapOK OK

swagger:response createOrUpdateConfigMapOK
*/
type CreateOrUpdateConfigMapOK struct {

	/*
	  In: Body
	*/
	Payload *models.ConfigMap `json:"body,omitempty"`
}

// NewCreateOrUpdateConfigMapOK creates CreateOrUpdateConfigMapOK with default headers values
func NewCreateOrUpdateConfigMapOK() *CreateOrUpdateConfigMapOK {

	return &CreateOrUpdateConfigMapOK{}
}

// WithPayload adds the payload to the create or update config map o k response
func (o *CreateOrUpdateConfigMapOK) WithPayload(payload *models.ConfigMap) *CreateOrUpdateConfigMapOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update config map o k response
func (o *CreateOrUpdateConfigMapOK) SetPayload(payload *models.ConfigMap) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateConfigMapOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateOrUpdateConfigMapDefault Failed

swagger:response createOrUpdateConfigMapDefault
*/
type CreateOrUpdateConfigMapDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateOrUpdateConfigMapDefault creates CreateOrUpdateConfigMapDefault with default headers values
func NewCreateOrUpdateConfigMapDefault(code int) *CreateOrUpdateConfigMapDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateOrUpdateConfigMapDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create or update config map default response
func (o *CreateOrUpdateConfigMapDefault) WithStatusCode(code int) *CreateOrUpdateConfigMapDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create or update config map default response
func (o *CreateOrUpdateConfigMapDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create or update config map default response
func (o *CreateOrUpdateConfigMapDefault) WithPayload(payload *models.Error) *CreateOrUpdateConfigMapDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update config map default response
func (o *CreateOrUpdateConfigMapDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateConfigMapDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
