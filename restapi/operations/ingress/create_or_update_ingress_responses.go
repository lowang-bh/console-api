// Code generated by go-swagger; DO NOT EDIT.

package ingress

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/console-api/models"
)

// CreateOrUpdateIngressCreatedCode is the HTTP code returned for type CreateOrUpdateIngressCreated
const CreateOrUpdateIngressCreatedCode int = 201

/*CreateOrUpdateIngressCreated Created

swagger:response createOrUpdateIngressCreated
*/
type CreateOrUpdateIngressCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Ingress `json:"body,omitempty"`
}

// NewCreateOrUpdateIngressCreated creates CreateOrUpdateIngressCreated with default headers values
func NewCreateOrUpdateIngressCreated() *CreateOrUpdateIngressCreated {

	return &CreateOrUpdateIngressCreated{}
}

// WithPayload adds the payload to the create or update ingress created response
func (o *CreateOrUpdateIngressCreated) WithPayload(payload *models.Ingress) *CreateOrUpdateIngressCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update ingress created response
func (o *CreateOrUpdateIngressCreated) SetPayload(payload *models.Ingress) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateIngressCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateOrUpdateIngressDefault Failed

swagger:response createOrUpdateIngressDefault
*/
type CreateOrUpdateIngressDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateOrUpdateIngressDefault creates CreateOrUpdateIngressDefault with default headers values
func NewCreateOrUpdateIngressDefault(code int) *CreateOrUpdateIngressDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateOrUpdateIngressDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create or update ingress default response
func (o *CreateOrUpdateIngressDefault) WithStatusCode(code int) *CreateOrUpdateIngressDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create or update ingress default response
func (o *CreateOrUpdateIngressDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create or update ingress default response
func (o *CreateOrUpdateIngressDefault) WithPayload(payload *models.Error) *CreateOrUpdateIngressDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update ingress default response
func (o *CreateOrUpdateIngressDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateIngressDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
