// Code generated by go-swagger; DO NOT EDIT.

package build_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteBuildAppHandlerFunc turns a function with the right signature into a delete build app handler
type DeleteBuildAppHandlerFunc func(DeleteBuildAppParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteBuildAppHandlerFunc) Handle(params DeleteBuildAppParams) middleware.Responder {
	return fn(params)
}

// DeleteBuildAppHandler interface for that can handle valid delete build app params
type DeleteBuildAppHandler interface {
	Handle(DeleteBuildAppParams) middleware.Responder
}

// NewDeleteBuildApp creates a new http.Handler for the delete build app operation
func NewDeleteBuildApp(ctx *middleware.Context, handler DeleteBuildAppHandler) *DeleteBuildApp {
	return &DeleteBuildApp{Context: ctx, Handler: handler}
}

/*DeleteBuildApp swagger:route DELETE /api/v1/groups/{groupname}/build/apps/{appname} buildApp deleteBuildApp

DeleteBuildApp delete build app API

*/
type DeleteBuildApp struct {
	Context *middleware.Context
	Handler DeleteBuildAppHandler
}

func (o *DeleteBuildApp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteBuildAppParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
